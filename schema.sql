create table
  public.treats (
    sku text not null,
    name text not null,
    satiety integer not null default 0,
    price integer not null default 0,
    constraint treats_pkey primary key (sku),
    constraint treats_name_key unique (name),
    constraint treats_sku_key unique (sku)
  ) tablespace pg_default;
  INSERT INTO "public"."treats" ("sku", "name", "satiety", "price") 
    VALUES ('CLOUD_CANDY', 'cloud candy', '15', '15'), ('CRUMBLY_COOKIE', 'crumbly cookie', '20', '20'), 
    ('CUCUMBER_SALAD', 'cucumber salad', '30', '30'), ('GOGI_BERRY', 'gogi berry', '10', '10'), 
    ('HONEY', 'honey', '8', '8'), ('KEBAB', 'kebab', '75', '75'), ('NABNAB_BERRY', 'nabnab berry', '15', '15'), 
    ('PINAP_BERRY', 'pinap berry', '20', '20'), ('RAZZ_BERRY', 'razz berry', '10', '10'), 
    ('SARDINE', 'sardine', '45', '45'), ('SEAWEED_SNACK', 'seaweed', '25', '25'), 
    ('SHADOW_BREAD', 'shadow bread', '42', '42'), ('SHINY_BERRY', 'shiny berry', '27', '27'), 
    ('SPICE_COOKIE', 'spice cookie', '38', '38'), ('STEAK_SKEWER', 'steak skewer', '95', '95'), 
    ('TAIYAKI', 'taiyaki', '55', '55'), ('VANILLA_FLUFF', 'vanilla fluff', '22', '22');

create table
  public.evolution_stages (
    stage smallint not null,
    max_happiness smallint not null,
    max_hunger smallint not null,
    constraint evolution_stages_pkey primary key (stage)
  ) tablespace pg_default;
  INSERT INTO "public"."evolution_stages" ("stage", "max_happiness", "max_hunger")
    VALUES ('1', '100', '100'), ('2', '500', '500'), ('3', '1000', '1000')

create table
  public.creature_types (
    id bigint generated by default as identity not null,
    type text not null,
    fav_treat text not null,
    hated_treat text not null,
    constraint creature_types_pkey primary key (id),
    constraint creature_types_id_key unique (id),
    constraint creature_types_type_key unique (
      type
    ),
    constraint creature_types_fav_treat_fkey foreign key (fav_treat) references treats (sku),
    constraint creature_types_hated_treat_fkey foreign key (hated_treat) references treats (sku)
  ) tablespace pg_default;
  INSERT INTO "public"."creature_types" ("id", "type", "fav_treat", "hated_treat") 
    VALUES ('1', 'water_turtle', 'SARDINE', 'KEBAB'), ('2', 'fire_lizard', 'SPICE_COOKIE', 'SEAWEED_SNACK'), 
    ('3', 'grass_dragon', 'CUCUMBER_SALAD', 'SPICE_COOKIE'), ('4', 'sea_ghost', 'SHADOW_BREAD', 'CRUMBLY_COOKIE'), 
    ('5', 'psychic_unicorn', 'SHINY_BERRY', 'SHADOW_BREAD'), ('6', 'fighter_cow', 'GOGI_BERRY', 'STEAK_SKEWER'), 
    ('7', 'silly_cat', 'TAIYAKI', 'CUCUMBER_SALAD'), ('8', 'electric_sheep', 'CLOUD_CANDY', 'SARDINE'), 
    ('9', 'fluffy_fairy', 'PINAP_BERRY', 'VANILLA_FLUFF'), ('10', 'flying_bug', 'VANILLA_FLUFF', 'HONEY');

create table
  public.creatures (
    id bigint generated by default as identity not null,
    name text not null,
    type text not null,
    happiness integer not null default 100,
    hunger integer not null default 100,
    stage smallint not null default '1'::smallint,
    constraint creatures_pkey primary key (id),
    constraint creatures_name_key unique (name),
    constraint creatures_stage_fkey foreign key (stage) references evolution_stages (stage),
    constraint creatures_type_fkey foreign key (
      type
    ) references creature_types (
      type
    )
  ) tablespace pg_default;
  INSERT INTO "public"."creatures" ("id", "name", "type", "happiness", "hunger") 
    VALUES ('2', 'Blaze', 'fire_lizard', '100', '0'), ('3', 'Whiskaroo', 'silly_cat', '100', '0'), 
    ('4', 'Rumbull', 'fighter_cow', '100', '0'), ('5', 'Spectrip', 'sea_ghost', '100', '0'), 
    ('6', 'Mindara', 'psychic_unicorn', '100', '0'), ('7', 'Zap E. Wool', 'electric_sheep', '100', '0'), 
    ('8', 'Flutterbop', 'flying_bug', '100', '0'), ('9', 'Puffilia', 'fluffy_fairy', '100', '0'), 
    ('10', 'Thornvyne', 'grass_dragon', '100', '0'), ('11', 'Shellwater', 'water_turtle', '100', '0'), 
    ('12', 'Infernyx', 'fire_lizard', '100', '0'), ('13', 'Nibbly', 'silly_cat', '100', '0'), 
    ('14', 'Brawlow', 'fighter_cow', '100', '0'), ('15', 'Haunter Glow', 'sea_ghost', '100', '0'), 
    ('16', 'Mystara', 'psychic_unicorn', '100', '0'), ('17', 'Shocuff', 'electric_sheep', '100', '0'), 
    ('18', 'Flyka', 'flying_bug', '100', '0'), ('19', 'Fayblossom', 'fluffy_fairy', '100', '0'), 
    ('20', 'Grumblevine', 'grass_dragon', '100', '0'), ('21', 'Aquaquel', 'water_turtle', '100', '0');

create table
  public.users (
    id bigint generated by default as identity not null,
    username text not null,
    gold integer not null default 0,
    constraint users_pkey primary key (id),
    constraint users_username_key unique (username)
  ) tablespace pg_default;

create table
  public.users_treat_inventory (
    user_id bigint not null,
    treat_sku text not null,
    quantity integer not null default 0,
    id bigint generated by default as identity not null,
    constraint users_treat_inventory_pkey primary key (id),
    constraint users_treat_inventory_id_key unique (id),
    constraint users_inventory_treat_sku_fkey foreign key (treat_sku) references treats (sku) on update cascade on delete cascade,
    constraint users_inventory_user_id_fkey foreign key (user_id) references users (id) on update cascade on delete cascade
  ) tablespace pg_default;

create table
  public.user_gold (
    id bigint generated by default as identity not null,
    user_id bigint not null,
    amount integer not null,
    time_created timestamp with time zone not null default (now() at time zone 'utc'::text),
    constraint user_gold_pkey primary key (id),
    constraint user_gold_user_id_fkey foreign key (user_id) references users (id) on update cascade on delete cascade
  ) tablespace pg_default;

create table
  public.users_treat_inventory (
    user_id bigint not null,
    treat_sku text not null,
    quantity integer not null default 0,
    id bigint generated by default as identity not null,
    constraint users_treat_inventory_pkey primary key (id),
    constraint users_treat_inventory_id_key unique (id),
    constraint users_inventory_treat_sku_fkey foreign key (treat_sku) references treats (sku) on update cascade on delete cascade,
    constraint users_inventory_user_id_fkey foreign key (user_id) references users (id) on update cascade on delete cascade
  ) tablespace pg_default;

create table
  public.purchases (
    order_id bigint not null,
    completed_at timestamp with time zone not null default (now() at time zone 'utc'::text),
    user_id bigint not null,
    item_sku text not null default ''::text,
    quantity bigint not null default '0'::bigint,
    constraint purchases_pkey primary key (order_id),
    constraint purchases_order_id_key unique (order_id),
    constraint purchases_item_sku_fkey foreign key (item_sku) references treats (sku) on update cascade,
    constraint purchases_user_id_fkey foreign key (user_id) references users (id) on update cascade on delete cascade
  ) tablespace pg_default;